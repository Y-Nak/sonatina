target = "evm-ethereum-london"

# regex: VALUE=\bv\d+\b
# check:    block0:
# nextln:        v1.i32 = add v100 v101;
# nextln:        fallthrough block1;
# nextln: 
# nextln:    block1:
# nextln:        $(var1=$VALUE).i32 = phi (v1 block0) (v31 block3);
# nextln:        v10.i32 = phi (v100 block0) (v30 block3);
# nextln:        fallthrough block2;
# nextln: 
# nextln:    block2:
# nextln:        br v102 block3 block4;
# nextln: 
# nextln:    block3:
# nextln:        v30.i32 = add v10 v104;
# nextln:        v31.i32 = add v30 v101;
# nextln:        br v103 block5 block1;
# nextln: 
# nextln:    block4:
# nextln:        v40.i32 = add v10 v105;
# nextln:        v42.i32 = sub v40 v101;
# nextln:        jump block5;
# nextln: 
# nextln:    block5:
# nextln:        $(var2=$VALUE).i32 = phi (v10 block3) (v42 block4);
# nextln:        v50.i32 = phi ($var1 block3) (v40 block4);
# nextln:        return $var2;
func public %value_phi_loop(v100.i32, v101.i32, v102.i1, v103.i1, v104.i32, v105.i32) -> i32:
    block0:
        v1.i32 = add v100 v101;
        fallthrough block1;

    block1:
        v10.i32 = phi (v100 block0) (v30 block3);
        v11.i32 = add v10 v101;
        fallthrough block2;

    block2:
        v22.i32 = sub v11 v101;
        br v102 block3 block4;

    block3:
        v30.i32 = add v10 v104;
        v31.i32 = add v30 v101;
        br v103 block5 block1;

    block4:
        v40.i32 = add v22 v105;
        v42.i32 = sub v40 v101;
        jump block5;

    block5:
        v50.i32 = phi (v11 block3) (v40 block4);
        v51.i32 = sub v50 v101;
        return v51;
