#! This test case is translated from
#! <https://github.com/llvm/llvm-project/blob/main/llvm/test/Transforms/NewGVN/phi-of-ops-move-block.ll>

target = "evm-ethereum-london"

#define void @llfoo(i32 %arg, i32 %arg1, i32 (i32, i32)* %arg2) {
# check:  block0:
# nextln:     jump block1;
# nextln: 
# nextln: block1:
# nextln:     v2.i32 = phi (v1 block0) (v3 block2);
# nextln:     v3.i32 = phi (v0 block0) (v2 block2);
# nextln:     v4.i32 = add v2 v3;
# nextln:     v5.i1 = ne v4 0.i32;
# nextln:     br v5 block2 block3;
# nextln: 
# nextln: block2:
# nextln:     jump block1;
# nextln: 
# nextln: block3:
# nextln:     return;
func %llvm_foo(v0.i32, v1.i32):
    block0:
        jump block1;

    block1:
        v2.i32 = phi (v1 block0) (v3 block2);
        v3.i32 = phi (v0 block0) (v2 block2);
        v4.i32 = add v2 v3;
        v5.i1 = ne v4 0.i32;
        br v5 block2 block3;

    block2:
        jump block1;

    block3:
        return;
