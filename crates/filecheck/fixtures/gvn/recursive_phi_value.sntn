# regex: VALUE=\bv\d+\b
# check:  block6:
# nextln:     $(var1=$VALUE).i8 = phi (v3 block3) (v4 block4);
# nextln:     v6.i8 = phi (3.i8 block3) (4.i8 block4);
# check:  block7:
# nextln:     $(var2=$VALUE).i8 = phi (v5 block5) ($var1 block6);
# nextln:     v7.i8 = phi (v6 block6) (5.i8 block5);
# check:      return $var2;
func %value_phi_recursive(v0.i1, v1.i1, v2.i8) -> i8:
    block0:
        br v0 block1 block2;

    block1:
        br v1 block3 block4;

    block2:
        jump block5;

    block3:
        v3.i8 = add 3.i8 v2;
        jump block6;

    block4:
        v4.i8 = add 4.i8 v2;
        jump block6;

    block5:
        v5.i8 = add 5.i8 v2;
        jump block7;

    block6:
        v6.i8 = phi (3.i8 block3) (4.i8 block4);
        jump block7;

    block7:
        v7.i8 = phi (v6 block6) (5.i8 block5);
        v8.i8 = add v7 v2;
        return v8;
