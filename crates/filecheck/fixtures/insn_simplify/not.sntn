target = "evm-ethereum-london"

# !(!v0) => v0
# check: return v0;
func %not0(v0.i8) -> i8:
    block0:
        v1.i8 = not v0;
        v2.i8 = not v1;
        return v2;

# !(-v0) => v0 - 1
# check: v2.i8 = sub v0 1.i8;
func %not1(v0.i8) -> i8:
    block0:
        v1.i8 = neg v0;
        v2.i8 = not v1;
        return v2;

# !(-v0) => v0 - 1
# check: v2.i8 = sub v0 1.i8;
func %not2(v0.i8) -> i8:
    block0:
        v1.i8 = neg v0;
        v2.i8 = not v1;
        return v2;

# !(a == b) => a != b;
# check: v3.i1 = ne v0 v1;
func %not3(v0.i8, v1.i8) -> i8:
    block0:
        v2.i1 = eq v0 v1;
        v3.i1 = not v2;
        return v3;

# !(a != b) => a == b;
# check: v3.i1 = eq v0 v1;
func %not4(v0.i8, v1.i8) -> i8:
    block0:
        v2.i1 = ne v0 v1;
        v3.i1 = not v2;
        return v3;

# !(a < b) => (b <= a);
# check: v3.i1 = le v1 v0;
func %not5(v0.i8, v1.i8) -> i8:
    block0:
        v2.i1 = lt v0 v1;
        v3.i1 = not v2;
        return v3;

# !(a <= b)  => (b < a);
# check: v3.i1 = lt v1 v0;
func %not6(v0.i8, v1.i8) -> i8:
    block0:
        v2.i1 = le v0 v1;
        v3.i1 = not v2;
        return v3;

# !(a < b) => (b <= a);
# check: v3.i1 = sle v1 v0;
func %not7(v0.i8, v1.i8) -> i8:
    block0:
        v2.i1 = slt v0 v1;
        v3.i1 = not v2;
        return v3;

# !(a <= b) => (b < a);
# check: v3.i1 = slt v1 v0;
func %not8(v0.i8, v1.i8) -> i8:
    block0:
        v2.i1 = sle v0 v1;
        v3.i1 = not v2;
        return v3;

# !(a > b) => !(b < a) => a <= b
# check: v3.i1 = le v0 v1;
func %not9(v0.i8, v1.i8) -> i8:
    block0:
        v2.i1 = gt v0 v1;
        v3.i1 = not v2;
        return v3;

# !(a >= b) => !(b <= a) => a < b
# check: v3.i1 = lt v0 v1;
func %not9(v0.i8, v1.i8) -> i8:
    block0:
        v2.i1 = ge v0 v1;
        v3.i1 = not v2;
        return v3;
