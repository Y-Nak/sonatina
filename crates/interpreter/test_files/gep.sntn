target = "evm-ethereum-london"

type @s1 = {i32, i64, i1};
type @nested = {i32, [i16; 3], [i8; 2]};

#[(0.i256) -> 12.i256]
#[(8.i256) -> 20.i256]
func private %gep_basic(v0.i256) -> i256 {
    block0:
        v1.*@s1 = int_to_ptr v0 *@s1;
        v2.*i1 = gep v1 0.i256 2.i256;
        v3.i256 = ptr_to_int v2 i256;
        return v3;
}


#[(0.i256) -> 64.i256]
func private %gep_ptr_ty(v0.i256) -> i256 {
    block0:
        v1.*[*i32; 3] = int_to_ptr v0 *[*i32; 3];
        v2.**i32 = gep v1 0.i256 2.i256;
        v3.i256 = ptr_to_int v2 i256;
        return v3;
}


#[(0.i256) -> 11.i256]
func private %gep_aggregate(v0.i256) -> i256 {
    block0:
        v1.*@nested = int_to_ptr v0 *@nested;
        v2.*i8 = gep v1 0.i256 2.i256 1.i256;
        v3.i256 = ptr_to_int v2 i256;
        return v3;
}
