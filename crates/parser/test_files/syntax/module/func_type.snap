---
source: crates/parser/tests/syntax.rs
expression: "module \"target = \"evm-ethereum-london\"\n\nfunc public %higher_order(v0.*(i256, i256) -> i32) {\n    block0:\n        return;\n}\n\"\n  target_triple \"evm-ethereum-london\"\n  function \"func public %higher_order(v0.*(i256, i256) -> i32) {\n      block0:\n          return;\n  }\"\n    function_signature \"func public %higher_order(v0.*(i256, i256) -> i32) \"\n      linkage \"public\"\n      function_identifier \"%higher_order\"\n        function_name \"higher_order\"\n      function_params \"(v0.*(i256, i256) -> i32)\"\n        value_declaration \"v0.*(i256, i256) -> i32\"\n          value_name \"v0\"\n          type_name \"*(i256, i256) -> i32\"\n            ptr_type \"*(i256, i256) -> i32\"\n              type_name \"(i256, i256) -> i32\"\n                function_type \"(i256, i256) -> i32\"\n                  function_type_arg \"(i256, i256)\"\n                    type_name \"i256\"\n                      primitive_type \"i256\"\n                    type_name \"i256\"\n                      primitive_type \"i256\"\n                  function_ret_type \"-> i32\"\n                    type_name \"i32\"\n                      primitive_type \"i32\"\n    block \"block0:\n            return;\"\n      block_ident \"block0\"\n        block_number \"0\"\n      stmt \"return;\"\n        inst_stmt \"return\"\n          inst \"return\"\n            inst_name \"return\"\n              inst_identifier \"return\"\n  EOI \"\"\n"
input_file: test_files/syntax/module/func_type.sntn
---
module "target = "evm-ethereum-london"

func public %higher_order(v0.*(i256, i256) -> i32) {
    block0:
        return;
}
"
  target_triple "evm-ethereum-london"
  function "func public %higher_order(v0.*(i256, i256) -> i32) {
      block0:
          return;
  }"
    function_signature "func public %higher_order(v0.*(i256, i256) -> i32) "
      linkage "public"
      function_identifier "%higher_order"
        function_name "higher_order"
      function_params "(v0.*(i256, i256) -> i32)"
        value_declaration "v0.*(i256, i256) -> i32"
          value_name "v0"
          type_name "*(i256, i256) -> i32"
            ptr_type "*(i256, i256) -> i32"
              type_name "(i256, i256) -> i32"
                function_type "(i256, i256) -> i32"
                  function_type_arg "(i256, i256)"
                    type_name "i256"
                      primitive_type "i256"
                    type_name "i256"
                      primitive_type "i256"
                  function_ret_type "-> i32"
                    type_name "i32"
                      primitive_type "i32"
    block "block0:
            return;"
      block_ident "block0"
        block_number "0"
      stmt "return;"
        inst_stmt "return"
          inst "return"
            inst_name "return"
              inst_identifier "return"
  EOI ""
